
import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Evgeni
 */
public class MainPanel extends javax.swing.JPanel {

    List<Card> cardsToDraw = new ArrayList<>();
    int width = 1000;
    int height = 600;
    boolean pause;
    
    public MainPanel() {
        initComponents();
        setBackground(Color.LIGHT_GRAY);
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        g.setColor(Color.GREEN);
        if (Game.fBotsTurn) {
            g.fillRect(0, 0, width / 2, height);
        } else {
            g.fillRect(width / 2, 0, width / 2, height);
        }
        
        drawCards(g, Game.fBot.getCards(), 0);
        drawCards(g, Game.sBot.getCards(), width/2);
        drawCard(g, CardField.getCard(), width / 2 - 40, height / 2);
    }
    
    public void drawCards(Graphics g, List<Card> cards, int startPosX) {
        int y = 0;
        int moveX = -1;
        for (int i = 0; i < cards.size(); i++) {
            if (i > 5) {
                y = height/5;
                if (moveX == 5) {
                    moveX = -1;
                }
                moveX++;
            } else {
                moveX++;
            }
            Color c = g.getColor();
            if (cards.get(i).getValue() == CardField.getCard().getValue() || cards.get(i).getColor() == CardField.getCard().getColor()) {
                g.setColor(Color.YELLOW);
                g.fillRect(startPosX + moveX * 80 + 4, y - 3, cards.get(i).getImage().getWidth() + 6, cards.get(i).getImage().getHeight() + 6);
            }
            g.setColor(c);
            g.drawImage(cards.get(i).getImage(), startPosX + moveX * 80 + 7, y, null);
        }
    }
    
    public void drawCard(Graphics g, Card card, int x, int y) {
        Color c = g.getColor();
        g.setColor(Color.YELLOW);
        g.fillRect(x - 3, y - 3, card.getImage().getWidth() + 6, card.getImage().getHeight() + 6);
        g.drawImage(card.getImage(), x, y, null);
        g.setColor(c);
    }
    
    /**
     * Creates new form MainPanel
     */
        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Pause Game");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(781, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(489, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Game.pauseGame(!Game.isPaused());
        if (pause) {
            pause = false;
            jButton1.setText("Pause Game");
        } else {
            pause = true;
            jButton1.setText("Start Game");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
